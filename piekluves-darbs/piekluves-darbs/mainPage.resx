<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAMgoAAAJNU0Z0AUkBTAIBAQMB
        AAFAAQEBQAEBARkBAAEZAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABZAMAARkDAAEBAQABIAUAARAB
        J6YAAwYBBwMAAf8DAAH/AzQB0AMeASv/ABUAAxoBJAMqAd4DQQF8YwAB/wMAAf8DAgH+AwAB/wMqAT//
        AAEAAw4BEgNBAXkDGQHtAwAB/wMdAesDKAE8A0UBnQMAAf8DAAH/A0IBswMqAT9QAAMqAd4DBAH8BAAE
        AQMAAf8DLAFDJAADFgHvAwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8D
        AAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/3MAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMfAegD
        QwGIAxEBFgQAAw0BEQMsAdwDPQFtCAADMgFPAz8BvQMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/zgAAyYB
        OQMAAf8IAAQBAwAB/wMtAUUgAANDAYMDQAG6RwAB/3MAAf8YAAMdASgDQwGvAwAB/wMGAfsDAAH/A0MB
        sQMAAf8DEwHyAzwBaAQBFwAB/wQAAzwBwwMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB
        /wMAAf8DAAH/AzwBwgQAAzMBVAMAAf8PAAH/Ay4BSCMAAf8DGwEmPAADJQHjA0QBjXMAAf8HAAH/AwAB
        /wMAAf8DAAH/AwAB/wM2Ac8DNwFdCwAB/wgAAw8BFANFAZsDBgH7AwAB/wMAAf8DAAH/AwAB/wcAAf8H
        AAH/OAADMwFTAwAB/w8AAf8DMQFOHAADCQELAwAB/wM5AcgwAAMtAUUDAAH/A0IBsHcAAf8HAAH/IwAB
        /yMAAf8HAAH/BwAB/zwAAzMBUwMAAf8PAAH/AzIBUCAAAz0BbAMAAf8DDwH1Ax8BLBwAA0QBlgMAAf8D
        JAHkAwcBCXsAAf8HAAH/IwAB/yMAAf8HAAH/BwAB/0AAAzMBUwMAAf8PAAH/AzMBUSQAAx4BKwMIAfoD
        LQHaEAADDwETAwAB/wNFAZ6HAAH/BwAB/yMAAf8jAAH/BwAB/wcAAf9EAAMzAVQDAAH/DwAB/wMyAU8o
        AAMRAfQDFQEdDAADAgH+AxYBHosAAf8HAAH/IwAB/yMAAf8HAAH/BwAB/w8AAf8DAAH/BwAB/wMAAf8D
        AAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wgAAzMBVAMAAf8IAAMnAd8DAAH/KAADMgHTAyYB
        OA8AAf+PAAH/BwAB/yMAAf8jAAH/BwAB/wcAAf9MAAMzAVQDAAH/AycB3wMAAf8DAAH/KAADHwHoAyYB
        OA8AAf8DGQEjiwAB/wcAAf8jAAH/IwAB/wcAAf8HAAH/DwAB/wMAAf8HAAH/AwAB/wMAAf8DAAH/AwAB
        /wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8IAAM5AWEDAAH/AwAB/wMRAfQkAAMjATMDFwHuEAAD
        DgESAwAB/4sAAf8HAAH/IwAB/yMAAf8HAAH/BwAB/1gAAwgBCigAAzQB0AMeASsXAAH/iwAB/wcAAf8j
        AAH/IwAB/wcAAf8HAAH/UAADPAHDLAADOAFeAycB4RgAAz8BcgMAAf+HAAH/BwAB/yMAAf8jAAH/BwAB
        /wcAAf8PAAH/AwAB/wcAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB
        /wsAAf8sAAMwAdcDIQEvHwAB/4cAAf8HAAH/IwAB/yMAAf8HAAH/BwAB/1MAAf8sAAMvAUkDEwHyGAAD
        BQEGAwAB/4cAAf8HAAH/IwAB/yMAAf8HAAH/BwAB/w8AAf8DAAH/BwAB/wMAAf8DAAH/AwAB/wMAAf8D
        AAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/CwAB/ywAA0EBegNDAYcfAAH/hwAB/wcAAf8jAAH/IwAB
        /wcAAf8HAAH/UwAB/ywAAz0BwQMpAT4fAAH/hwAB/wcAAf8jAAH/IwAB/wcAAf8HAAH/UwAB/ywAAywB
        2wMdASgcAAMUAfEDDAEQgwAB/wcAAf8jAAH/IwAB/wcAAf8HAAH/UwAB/ywAA0MBrwM5AWMfAAH/jwAB
        /xgAAzYBWgMOAfcDAAH/AwAB/wNDAa0DCwEOFwAB/w8AAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8D
        AAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8s
        AAMWAR4DBgH7GAADGQEiAwAB/48AAf8DFwEfAyoBQANBAXsDNAHRAwAB/wMAAf8DOQHIAxMBGggAAz4B
        cQMAAf8DAAH/AwQB/ANFAZ4DNgFZAyEBLwMAAf8PAAH/UwAB/zAAAywB2QMtAdoEAQgABAIDAAH/AwAB
        /wMIAQqPAAH/AxcB7gMvAdgDRQGaAzIBTyQAAxUBHQNBAXsDPgG7AyUB4wMGAfsPAAH/UwAB/zQAAzkB
        YgMAAf8DAAH/AwAB/wMAAf8DKQE+7AADFwHuAyEBL08AAf//ADkAAwoBDQMWAe8DAAH/AwAB/wMAAf8D
        AAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8D
        AAH/A0UBm9QAAUIBTQE+BwABPgMAASgDAAFkAwABGQMAAQEBAAEBBQABkAEBFgAD/wEABP8B+AE/A/8B
        4AYAAf8B4wL/AfwBHwP/AeAGAAH+AQABPwH/AfwBjwH4AgABYAYAAYABIwEAAf8B/AHHAfkC/wFgBgAB
        vwEAAT4BgAECAXMB/AH/Af4BYAYAAaABNgECAb8B/wE5AfwBfwH4AeAGAAGvAfcB+gG/Af8BnAH/AQ8B
        4QHgBgABrwH3AfoBvwH/Ac4BfwHHAY8B4AYAAa8B9wH6Ab8B/wHnAT8B8wGfAeAGAAGvAfcB+gG5AQAB
        MwE/AfMBvwHgBgABrwH3AfoBvwH/AfgBPwHzAZ8B4AYAAa8B9wH6AbkBAAEMAT8B5wGfAeAGAAGvAfcB
        +gG/Av8BfwHnAd8B4AYAAa8B9wH6Ab8B/wH9Af8CzwHgBgABrwH3AfoBuQEAAQ0B/wHPAe8B4AYAAa8B
        9wH6Ab8B/wH9Af8CzwHgBgABrwH3AfoBuQEAAQ0B/wHPAe8B4AYAAa8B9wH6Ab8B/wH9Af8BzwHvAeAG
        AAGvAfcB+gG/Af8B/QH/Ac8B5wHgBgABrwH3AfoBvwH/Af0B/wHPAe8B4AYAAe8BwAH7AYABAAEBAf8C
        zwHgBgAB4AEMAQMBvwH/Af0B/wHjAQ8B4AYAAeAB/wGDAb8B/wH9Af8B8AE/AeAGAAP/AZ8B/wH9A/8B
        4AYAA/8BgAEAAQED/wHgBgAL
</value>
  </data>
</root>